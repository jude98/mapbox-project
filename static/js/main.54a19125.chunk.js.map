{"version":3,"sources":["types/locationActionTypes.js","actions/locationAction.js","components/Map.js","actions/imageAction.js","components/RenderImage.js","components/MapScene.js","components/Home.js","App.js","reportWebVitals.js","reducer/LocationReducer.js","reducer/imageReducer.js","reducer/index.js","index.js"],"names":["SELECT_LOCATION_SUCCESS","STATIC_IMAGE_FETCH_SUCCESS","onSelectLocation","longitude","latitude","zoom","dispatch","type","mapboxgl","workerClass","require","default","Container","styled","div","geolocateStyle","right","margin","padding","Map","props","onChangeView","useDispatch","useSelector","state","location","useState","width","height","viewport","setViewport","onDragMarker","evt","lngLat","url","process","data","fetchImage","mapboxApiAccessToken","mapStyle","onViewportChange","transitionDuration","onDblClick","doubleClickZoom","style","positionOptions","enableHighAccuracy","trackUserLocation","onGeolocate","coords","offsetTop","offsetLeft","draggable","onDragEnd","icon","faMapMarkerAlt","color","fontSize","ImageContainer","Heading","Image","img","Actions","Button","button","exit","RenderImage","onShowScene","imageUrl","image","src","alt","onClick","BackButton","SpinningBox","name","position","boxRef","useRef","ref","size","depth","assignTo","MapScene","faArrowLeft","marginRight","className","antialias","adaptToDeviceRatio","canvasId","target","Vector3","Zero","alpha","Math","PI","beta","radius","lowerRadiusLimit","upperRadiusLimit","intensity","direction","Up","Color3","FromHexString","Home","showImage","setShowImage","showScene","setShowScene","value","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","locationReducer","action","currentActionType","imageReducer","rootReducer","combineReducers","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54a19125.chunk.js","sourcesContent":["export const SELECT_LOCATION_SUCCESS = \"SELECT LOCATION SUCCESS\";\nexport const STATIC_IMAGE_FETCH_SUCCESS = \"STATIC IMAGE FETCH SUCCESS\";\n","import { SELECT_LOCATION_SUCCESS } from \"../types/locationActionTypes\";\n\nexport const onSelectLocation = (longitude, latitude, zoom) => {\n  return (dispatch) => {\n    dispatch({\n      type: SELECT_LOCATION_SUCCESS,\n      latitude,\n      longitude,\n    });\n  };\n};\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport mapboxgl from \"mapbox-gl\";\nimport ReactMapGL, { GeolocateControl, Marker } from \"react-map-gl\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMapMarkerAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { onSelectLocation } from \"../actions/locationAction\";\nimport { fetchImage } from \"../actions/imageAction\";\n\n// @ts-ignore\n// eslint-disable-next-line import/no-webpack-loader-syntax, import/no-unresolved\nmapboxgl.workerClass = require(\"worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker\").default;\n\nconst accessToken = process.env.REACT_APP_API_KEY;\n\nconst Container = styled.div`\n  overflow-x: hidden;\n`;\n\nconst geolocateStyle = {\n  right: \"10px\",\n  margin: \"50px\",\n  padding: \"10px\",\n};\n\nconst Map = (props) => {\n  const { onChangeView } = props;\n  const dispatch = useDispatch();\n  const { longitude, latitude } = useSelector((state) => state.location);\n  const [viewport, setViewport] = useState({\n    width: \"100vw\",\n    height: \"100vh\",\n    latitude: latitude,\n    longitude: longitude,\n    zoom: 8,\n  });\n\n  const onchangeViewPort = (viewport) => {\n    setViewport({ ...viewport, transitionDuration: 500 });\n  };\n\n  const onGeolocate = ({ coords }) => {\n    dispatch(\n      onSelectLocation(coords.longitude, coords.latitude, viewport.zoom)\n    );\n  };\n\n  const onDragMarker = (evt) => {\n    const [longitude, latitude] = evt.lngLat;\n    dispatch(onSelectLocation(longitude, latitude, viewport.zoom));\n    // const url = `https://api.mapbox.com/styles/v1/mapbox/streets-v11/static/${longitude},${latitude},${viewport.zoom},0/300x300?${accessToken}`;\n    dispatch(fetchImage(longitude, latitude, viewport.zoom));\n    // changeImage(url);\n    onChangeView(true);\n  };\n\n  return (\n    <Container>\n      <ReactMapGL\n        mapboxApiAccessToken={accessToken}\n        mapStyle=\"mapbox://styles/mapbox/streets-v11\"\n        {...viewport}\n        onViewportChange={onchangeViewPort}\n        onDblClick={onDragMarker}\n        doubleClickZoom={false}\n      >\n        <GeolocateControl\n          style={geolocateStyle}\n          positionOptions={{ enableHighAccuracy: true }}\n          trackUserLocation={true}\n          onGeolocate={onGeolocate}\n        />\n        <Marker\n          latitude={latitude}\n          longitude={longitude}\n          offsetTop={-20}\n          offsetLeft={-10}\n          draggable\n          onDragEnd={onDragMarker}\n        >\n          <FontAwesomeIcon\n            icon={faMapMarkerAlt}\n            style={{ color: \"red\", fontSize: \"25px\" }}\n          />\n        </Marker>\n      </ReactMapGL>\n    </Container>\n  );\n};\n\nexport default Map;\n","import { STATIC_IMAGE_FETCH_SUCCESS } from \"../types/locationActionTypes\";\n\nconst accessToken = process.env.REACT_APP_API_KEY;\n\nexport const fetchImage = (longitude, latitude, zoom) => {\n  return (dispatch) => {\n    const url = `https://api.mapbox.com/styles/v1/mapbox/streets-v11/static/${longitude},${latitude},${zoom},0/500x500?access_token=${accessToken}`;\n    dispatch({ type: STATIC_IMAGE_FETCH_SUCCESS, data: url });\n  };\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ImageContainer = styled.div`\n  background-color: #ced7ef;\n  box-shadow: 5px 5px 20px;\n  height: 700px;\n  width: 700px;\n`;\n\nconst Heading = styled.div`\n  font-size: 30px;\n  margin-top: 10px;\n  text-align: center;\n`;\n\nconst Image = styled.img`\n  margin: 25px 0 0 95px;\n`;\n\nconst Actions = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  margin: 40px 100px 0 0;\n`;\n\nconst Button = styled.button`\n  background-color: ${(props) => (props.exit ? \"#FF0000\" : \"#4264fb\")};\n  color: #ffffff;\n  min-height: 35px;\n  width: ${(props) => props.width};\n  margin-left: 25px;\n  border-radius: 50px;\n  text-align: center;\n  border: none;\n  cursor: pointer;\n  &:hover {\n    background-color: #ffffff;\n    color: ${(props) => (props.exit ? \"#FF0000\" : \"#4264fb\")};\n    font-size: 15px;\n    font-weight: bold;\n  }\n  transition: all 0.3s cubic-bezier(0.645, 0.045, 0.355, 1);\n  outline: none;\n`;\n\nconst RenderImage = ({ onChangeView, onShowScene }) => {\n  const { imageUrl } = useSelector((state) => state.image);\n  return (\n    <Container>\n      <ImageContainer>\n        <Heading>Static Image of the Location</Heading>\n        <Image src={imageUrl} alt=\"Map\" />\n        <Actions>\n          <Button width=\"100px\" exit onClick={() => onChangeView(false)}>\n            Cancel\n          </Button>\n          <Button width=\"150px\" onClick={() => onShowScene(true)}>\n            Map to 3D modal\n          </Button>\n        </Actions>\n      </ImageContainer>\n    </Container>\n  );\n};\n\nexport default RenderImage;\n","import React, { useRef } from \"react\";\nimport { Engine, Scene } from \"react-babylonjs\";\nimport { Vector3, Color3 } from \"@babylonjs/core\";\nimport styled from \"styled-components\";\nimport \"../../src/index.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport { useSelector } from \"react-redux\";\n\nconst BackButton = styled.div`\n  position: absolute;\n  font-size: 25px;\n  top: 40px;\n  left: 7%;\n  font-weight: 500;\n  cursor: pointer;\n`;\n\nconst SpinningBox = ({ name, position, url }) => {\n  const boxRef = useRef(null);\n  return (\n    <box\n      name={name}\n      ref={boxRef}\n      size={2}\n      position={position}\n      height={1}\n      width={0.75}\n      depth={0.25}\n    >\n      <standardMaterial>\n        <texture url={url} assignTo={\"diffuseTexture\"} />\n      </standardMaterial>\n    </box>\n  );\n};\n\nconst MapScene = ({ onChangeView, onShowScene }) => {\n  const { imageUrl } = useSelector((state) => state.image);\n  const onClickBack = () => {\n    onChangeView(false);\n    onShowScene(false);\n  };\n  return (\n    <>\n      <BackButton onClick={onClickBack}>\n        <FontAwesomeIcon icon={faArrowLeft} style={{ marginRight: \"10px\" }} />\n        Back to Map\n      </BackButton>\n      <div className=\"canvasDiv\">\n        <Engine antialias adaptToDeviceRatio canvasId=\"babylonJS\">\n          <Scene>\n            <arcRotateCamera\n              name=\"camera1\"\n              target={Vector3.Zero()}\n              alpha={(3 * Math.PI) / 4}\n              beta={Math.PI / 4}\n              radius={2}\n              lowerRadiusLimit={2}\n              upperRadiusLimit={5}\n            />\n            <hemisphericLight\n              name=\"light1\"\n              intensity={10}\n              direction={Vector3.Up()}\n            />\n            <SpinningBox\n              name=\"left\"\n              position={new Vector3(0, 0, 0)}\n              color={Color3.FromHexString(\"#EEB5EB\")}\n              url={imageUrl}\n            />\n          </Scene>\n        </Engine>\n      </div>\n    </>\n  );\n};\n\nexport default MapScene;\n","import React, { useState } from \"react\";\nimport Map from \"./Map\";\nimport RenderImage from \"./RenderImage\";\nimport MapScene from \"./MapScene\";\n\nconst Home = () => {\n  const [showImage, setShowImage] = useState(false);\n  const [showScene, setShowScene] = useState(false);\n  const onChangeView = (value) => {\n    setShowImage(value);\n  };\n  const onShowScene = (value) => {\n    setShowScene(value);\n  };\n  return (\n    <>\n      {!showImage && !showScene && <Map onChangeView={onChangeView} />}\n      {showImage && !showScene && (\n        <RenderImage onChangeView={onChangeView} onShowScene={onShowScene} />\n      )}\n      {showScene && (\n        <MapScene onChangeView={onChangeView} onShowScene={onShowScene} />\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import Home from \"./components/Home\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\n\nconst App = () => {\n  return <Home />;\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { SELECT_LOCATION_SUCCESS } from \"../types/locationActionTypes\";\n\nconst initialState = {\n  latitude: 37.7577,\n  longitude: -122.4376,\n  zoom: 8,\n};\n\nconst locationReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SELECT_LOCATION_SUCCESS:\n      return {\n        ...state,\n        latitude: action.latitude,\n        longitude: action.longitude,\n        zoom: action.zoom,\n      };\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n\nexport default locationReducer;\n","import { STATIC_IMAGE_FETCH_SUCCESS } from \"../types/locationActionTypes\";\n\nconst initialState = {\n  imageUrl: \"\",\n  currentActionType: \"\",\n};\n\nconst imageReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case STATIC_IMAGE_FETCH_SUCCESS:\n      return {\n        ...state,\n        imageUrl: action.data,\n        currentActionType: action.type,\n      };\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n\nexport default imageReducer;\n","import locationReducer from \"./LocationReducer\";\nimport imageReducer from \"./imageReducer\";\nimport { combineReducers } from \"redux\";\n\nconst rootReducer = combineReducers({\n  location: locationReducer,\n  image: imageReducer,\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducer\";\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer, composeEnhancer(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}